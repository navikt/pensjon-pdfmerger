
name: "Build, push and deploy"

on:
  push:
    branches:
      - sandbox

env:
  IMAGE_BASE: ghcr.io/${{ github.repository }}


jobs:
  build:
    name: "Build Docker image"
    permissions:
      contents: "read"
      checks: "write"
      id-token: "write"
      packages: "write"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      version: ${{ steps.version.outputs.version }}
      image: "${{ steps.login.outputs.registry }}/${{ github.repository }}/pensjon-pdfmerger:${{ env.VERSION }}"
      image-digest: "${{ steps.login.outputs.registry }}/${{ github.repository }}/pensjon-pdfmerger:@${{ steps.build_push.outputs.digest }}"
    steps:
      - uses: actions/checkout@v4
      - name: Set version
        id: version
        shell: bash
        run: |
          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=12 HEAD)
          export VERSION="$TIME-$COMMIT"
          echo "Building version $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          echo "::set-output name=yearweek::$(date +'%Y-%W')"

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository/*/*
            !~/.m2/repository/no/nav
          key: ${{ runner.os }}-maven-${{ steps.version.outputs.yearweek }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ steps.version.outputs.yearweek }}-


      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: docker/setup-buildx-action@v3

      - name: Build
        shell: bash
        run: |
          mvn versions:set -DnewVersion="$VERSION" -DgenerateBackupPoms=false -Pgithub-action --batch-mode -DprocessAllModules
          mvn clean verify -Pgithub-action -Dmaven.wagon.http.retryHandler.count=3 -Dsurefire.rerunFailingTestsCount=2 -Dlogback.configurationFile="${GITHUB_WORKSPACE}/.github/logback-github.xml" --batch-mode --fail-at-end -T 1.5C

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TZ: "Europe/Oslo"

      - name: Upload surefire reports on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: surefire-reports
          path: ${{ github.workspace }}/**/target/surefire-reports/*
          retention-days: 5

      - name: Upload HotSpot Fatal Error logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: hotspot-fatal-error-logs
          path: ${{ github.workspace }}/**/hs_err_pid*.log
          retention-days: 5

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: NAIS login
        uses: nais/login@v0
        id: login
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: teampensjon

      - name: "Build and publish pensjon-pdfmerger Docker image"
        id: build_push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: "${{ steps.login.outputs.registry }}/${{ github.repository }}/pensjon-pdfmerger:${{ env.VERSION }},${{ steps.login.outputs.registry }}/${{ github.repository }}/pensjon-pdfmerger:sandbox"
          push: true
          cache-from: |
            "type=registry,ref=${{ steps.login.outputs.registry }}/${{ github.repository }}/pensjon-pdfmerger:main"
          cache-to: type=inline

  deployProd:
    name: "Deploy Dev"
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    needs: build
    concurrency: deploy-${{ matrix.application_name }}-${{ matrix.cluster }}
    strategy:
      matrix:
        include:
          - app: pensjon-pdfmerger
            resource: nais-dev.yml
            cluster: dev-gcp
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        name: "Deploy to NAIS DEV ${{ matrix.cluster }}"
        env:
          RESOURCE: ${{ matrix.resource }}
          IMAGE: "${{ needs.build.outputs.image }}"
          CLUSTER: "${{ matrix.cluster }}"
          TIMEOUT: 10m

  attest-sign:
    permissions:
      contents: read
      id-token: write
    needs: [build]
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4
      - name: NAIS login
        uses: nais/login@v0
        id: login
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: teampensjon
      - name: 'Generate SBOM'
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'image'
          format: 'cyclonedx'
          output: 'trivy-results.cyclonedx'
          image-ref: "${{ needs.build.outputs.image-digest }}"
      - name: Attest and sign image
        id: attest-sign
        uses: nais/attest-sign@v1
        with:
          image_ref: "${{ needs.build.outputs.image-digest }}"
          sbom: "trivy-results.cyclonedx"
